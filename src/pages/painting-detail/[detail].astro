---
import Layout from "@layouts/Layout.astro";
import { imagesSources } from "src/constants";
import type { ImageSource, ImageSourceDimensions } from "src/constants";
import OpenImage from "../../assets/icons/open-image.svg";

export async function getStaticPaths() {
  return [
    { params: { detail: "starry-night" } },
    { params: { detail: "girl-with-a-pearl-earring" } },
    { params: { detail: "guernica" } },
  ];
}

const { detail } = Astro.params;

const getImages = (imgSources: ImageSource[]) => {
  let imgSourcesBack: ImageSource[] = [];
  imgSourcesBack = imgSourcesBack.concat(imgSources);

  const paintName = detail.split("-");

  const test = paintName
    .map((word) => word[0].toUpperCase() + word.slice(1))
    .join(" ");

  return imgSourcesBack.find((el) => el.name === test) as ImageSource;
};

const myImages = getImages(imagesSources);
console.log(myImages, "print console");
---

<Layout title="Starry Night">
  <script>
    var modal = document.getElementById("myModal") as HTMLElement;
    var btn = document.getElementById("openModal") as HTMLElement;
    var span = document.getElementsByClassName("close")[0] as HTMLElement;

    btn.onclick = function () {
      modal.style.display = "block";
      modal.style.animationName = "fadeIn";
      modal.style.animationDuration = "0.7s";
    };

    span.onclick = function () {
      modal.style.display = "none";
    };

    // Función para cerrar el modal con animación
    function closeModal() {
      modal.style.animationName = "fadeOut"; // Aplica la animación fadeOut al cerrar
      modal.style.animationDuration = "0.7s";
      // Espera a que termine la animación para ocultar el modal
      setTimeout(function () {
        modal.style.display = "none";
      }, 400); // Ajusta este tiempo al mismo que la duración de tu animación
    }

    window.onclick = function (event) {
      if (event.target == modal) {
        closeModal();
      }
    };
  </script>
  <div id="myModal" class="modal">
    <div class="modal-content">
      <span class="close">CLOSE</span>
      <img src={myImages.dimensions.thumbnail} />
    </div>
  </div>

  <div class="content-container">
    <div class="paint-container">
      <div class="view-image">
        <img class="open-image" src={OpenImage.src} /><span id="openModal"
          >VIEW IMAGE</span
        >
      </div>
      <img class="paint-img" src={myImages.dimensions.thumbnail} />
      <div class="below-data">
        <strong>Starry Night</strong>
        <span>Vicent Van Gogh</span>
      </div>
    </div>

    <div>
      <img class="artist-img" src={myImages.dimensions.artist} />
    </div>

    <div class="display-container">
      <span class="age-display">{myImages.year}</span>
    </div>

    <div>
      <p class="paint-body">
        {myImages.paintDescription}
      </p>
    </div>

    <div>
      <a class="go-to-source" href="/"> GO TO SOURCE </a>
    </div>
  </div>
</Layout>

<style>
  .modal {
    display: none; /* Oculto por defecto */
    position: fixed; /* Se queda fijo en la pantalla */
    z-index: 2; /* Se sitúa sobre el resto */
    left: 0;
    top: 0;
    width: 100%; /* Ancho completo */
    height: 100%; /* Alto completo */
    overflow: auto; /* Si el contenido es muy grande, permite scroll */
    background-color: rgba(0, 0, 0, 0.8); /* Fondo semitransparente */
  }

  .modal-content {
    background-color: transparent;
    margin: 15% auto; /* 15% desde el top y centrado */
    padding: 20px;
    /* border: 1px solid #888; */
    width: 80%; /* Ancho del contenido */
    animation-name: fadeIn; /* Animación para el fade-in */
    animation-duration: 0.4s; /* Duración de la animación */
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  /* Agrega esta nueva animación a tu CSS */
  /* Modifica los keyframes de fadeOut en tu CSS */
  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }

  .close {
    color: var(--color-white);
    float: right;
    font-size: 1rem;
    font-weight: bold;
    margin-bottom: 2em;
    font-size: var(--f-link-1);
    letter-spacing: var(--lt-spacing-link-1);
  }

  .close:hover,
  .close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
  }

  .open-image {
    display: inline-block;
    margin-right: 1em;
  }
  .content-container {
    padding: 1.5rem;

    .paint-container {
      position: relative;
    }
    .view-image {
      z-index: 1;
      position: absolute;
      color: white;
      left: 1.5rem;
      top: 1.5rem;
      background-color: rgba(0, 0, 0, 0.7);
      padding: 1em;

      span {
        font-size: var(--f-link-1);
        letter-spacing: var(--lt-spacing-link-1);
      }
    }

    .artist-img {
      width: 4rem;
      margin-left: 1.25rem;
    }

    .paint-img {
      width: 100%;
      clip-path: polygon(
        0 80%,
        30% 80%,
        84% 80%,
        84% 100%,
        100% 100%,
        100% 0,
        0% 0%
      );
    }

    .display-container {
      position: relative;
      margin-bottom: 3.5rem;
      .age-display {
        position: absolute;
        font-size: 6.25rem;
        font-weight: bold;
        color: var(--color-gray-cultured);
        right: 0.35rem;
        top: -1.8rem;
      }
    }

    .below-data {
      width: fit-content;
      transform: translate(1.5rem, -1.5rem);
      strong {
        display: block;
        margin-bottom: 0.5rem;
        font-size: var(--f-heading-2);
        line-height: var(--lh-heading-2);
        width: 100%;
      }
      span {
        font-size: var(--f-subhead-1);
        line-height: var(--lh-subhead-1);
        color: var(--color-gray);
      }
    }

    .paint-body {
      position: relative;
      z-index: 1;
      font-size: var(--f-body);
      line-height: var(--lh-body);
      color: var(--color-gray);
    }
  }

  .go-to-source {
    font-size: var(--f-link-2);
    letter-spacing: var(--lt-spacing-link-2);
    text-decoration: underline;
    color: var(--color-gray);
  }
</style>
